#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ Python
"""

import urllib.request
import urllib.parse
import json
import ssl


def test_endpoint(method: str, endpoint: str, data: dict = None, params: dict = None) -> None:
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    url = f"http://localhost:8000{endpoint}"
    
    if params:
        url += "?" + urllib.parse.urlencode(params)
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {method} {endpoint}")
    print(f"URL: {url}")
    
    if data:
        print(f"–î–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
        req = urllib.request.Request(url)
        req.add_header('X-API-Key', 'your-secret-api-key-here')
        req.add_header('Content-Type', 'application/json')
        
        if method.upper() == "POST" and data:
            req.data = json.dumps(data).encode('utf-8')
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        with urllib.request.urlopen(req) as response:
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status}")
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            
            # –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
            result = response.read().decode('utf-8')
            try:
                json_result = json.loads(result)
                print(f"üìÑ –û—Ç–≤–µ—Ç: {json.dumps(json_result, indent=2, ensure_ascii=False)}")
            except:
                print(f"üìÑ –û—Ç–≤–µ—Ç: {result}")
                
    except urllib.error.HTTPError as e:
        print(f"‚ùå HTTP –û—à–∏–±–∫–∞: {e.code} - {e.reason}")
        try:
            error_body = e.read().decode('utf-8')
            print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_body}")
        except:
            pass
    except urllib.error.URLError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e.reason}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API")
    print("=" * 50)
    
    # 1. –ë–∞–∑–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    print("\nüìã 1. –ë–∞–∑–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã")
    test_endpoint("GET", "/")
    test_endpoint("GET", "/health")
    
    # 2. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    print("\nüìã 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π")
    test_endpoint("GET", "/api/v1/organizations/search", params={"name": "–†–æ–≥–∞"})
    test_endpoint("GET", "/api/v1/organizations/1")
    
    # 3. –ó–¥–∞–Ω–∏—è
    print("\nüìã 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–¥–∞–Ω–∏–π")
    test_endpoint("GET", "/api/v1/buildings")
    test_endpoint("GET", "/api/v1/buildings/1")
    test_endpoint("GET", "/api/v1/buildings/1/organizations")
    
    # 4. –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    print("\nüìã 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π")
    test_endpoint("GET", "/api/v1/activities")
    test_endpoint("GET", "/api/v1/activities/1")
    test_endpoint("GET", "/api/v1/activities/1/organizations")
    test_endpoint("GET", "/api/v1/activities/1/organizations/hierarchy")
    
    # 5. –ì–µ–æ–ø–æ–∏—Å–∫
    print("\nüìã 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–æ–ø–æ–∏—Å–∫–∞")
    radius_data = {
        "latitude": 55.7539,
        "longitude": 37.6208,
        "radius_km": 1.0
    }
    test_endpoint("POST", "/api/v1/organizations/geo/radius", data=radius_data)
    
    # 6. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
    print("\nüìã 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–¥–∞–Ω–∏—è
    building_data = {
        "address": "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 123",
        "latitude": 55.7558,
        "longitude": 37.6176
    }
    test_endpoint("POST", "/api/v1/buildings", data=building_data)
    
    print("\n" + "=" * 50)
    print("‚úÖ –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
    print("üìö Swagger UI: http://localhost:8000/docs")
    print("üîç ReDoc: http://localhost:8000/redoc")


if __name__ == "__main__":
    main() 