#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
–ó–∞–ø—É—Å–∫: python test_manual.py
"""

import requests
import json
from typing import Dict, Any

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost:8000"
API_KEY = "your-secret-api-key-here"
HEADERS = {"X-API-Key": API_KEY}


def test_endpoint(method: str, endpoint: str, data: Dict[str, Any] = None, params: Dict[str, Any] = None) -> None:
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    url = f"{BASE_URL}{endpoint}"
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {method} {endpoint}")
    print(f"URL: {url}")
    
    if data:
        print(f"–î–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)}")
    
    if params:
        print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    try:
        if method.upper() == "GET":
            response = requests.get(url, headers=HEADERS, params=params)
        elif method.upper() == "POST":
            response = requests.post(url, headers=HEADERS, json=data)
        else:
            print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥: {method}")
            return
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            try:
                result = response.json()
                print(f"üìÑ –û—Ç–≤–µ—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            except:
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API")
    print("=" * 50)
    
    # 1. –ë–∞–∑–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    print("\nüìã 1. –ë–∞–∑–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã")
    test_endpoint("GET", "/")
    test_endpoint("GET", "/health")
    
    # 2. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    print("\nüìã 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π")
    test_endpoint("GET", "/api/v1/organizations/search", params={"name": "–†–æ–≥–∞"})
    test_endpoint("GET", "/api/v1/organizations/1")
    test_endpoint("GET", "/api/v1/organizations/999")  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
    
    # 3. –ó–¥–∞–Ω–∏—è
    print("\nüìã 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–¥–∞–Ω–∏–π")
    test_endpoint("GET", "/api/v1/buildings")
    test_endpoint("GET", "/api/v1/buildings/1")
    test_endpoint("GET", "/api/v1/buildings/1/organizations")
    
    # 4. –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    print("\nüìã 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π")
    test_endpoint("GET", "/api/v1/activities")
    test_endpoint("GET", "/api/v1/activities/1")
    test_endpoint("GET", "/api/v1/activities/1/organizations")
    test_endpoint("GET", "/api/v1/activities/1/organizations/hierarchy")
    
    # 5. –ì–µ–æ–ø–æ–∏—Å–∫
    print("\nüìã 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–æ–ø–æ–∏—Å–∫–∞")
    radius_data = {
        "latitude": 55.7539,
        "longitude": 37.6208,
        "radius_km": 1.0
    }
    test_endpoint("POST", "/api/v1/organizations/geo/radius", data=radius_data)
    
    rectangle_data = {
        "min_lat": 55.75,
        "max_lat": 55.76,
        "min_lon": 37.61,
        "max_lon": 37.62
    }
    test_endpoint("POST", "/api/v1/organizations/geo/rectangle", data=rectangle_data)
    
    # 6. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
    print("\nüìã 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–¥–∞–Ω–∏—è
    building_data = {
        "address": "–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 123",
        "latitude": 55.7558,
        "longitude": 37.6176
    }
    test_endpoint("POST", "/api/v1/buildings", data=building_data)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    activity_data = {
        "name": "–¢–µ—Å—Ç–æ–≤–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
        "level": 1,
        "parent_id": None
    }
    test_endpoint("POST", "/api/v1/activities", data=activity_data)
    
    print("\n" + "=" * 50)
    print("‚úÖ –†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("curl -X GET 'http://localhost:8000/api/v1/buildings' -H 'X-API-Key: your-secret-api-key-here'")
    print("curl -X GET 'http://localhost:8000/docs' # Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")


if __name__ == "__main__":
    main() 